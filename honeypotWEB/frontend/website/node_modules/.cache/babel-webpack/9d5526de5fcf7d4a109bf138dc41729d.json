{"ast":null,"code":"import { Profile } from \"./models/profile.model\";\nimport { ProfileAction } from \"./models/action.model\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/website.service\";\nimport * as i2 from \"./services/profile.service\";\nimport * as i3 from \"@angular/router\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(service, profileStorageService) {\n      this.service = service;\n      this.profileStorageService = profileStorageService; // --- models ----//\n\n      this.profile = new Profile();\n      this.delta = 0;\n      this.deltas = [];\n      this.keys = 0;\n      this.delta_mouse = 0;\n      this.deltas_mouse = [];\n      this.moves = 0;\n    }\n\n    ngOnInit() {\n      console.log('page loaded');\n      this.refreshProfile();\n    }\n\n    refreshProfile() {\n      fetch(\"https://ipinfo.io/json?token=97c345b7d7b037\").then(response => response.json()).then(data => {\n        this.profile.ip = data.ip;\n        this.profile.city = data.city;\n        this.profile.region = data.region;\n        this.profile.country_name = data.country;\n        this.profile.location = data.loc;\n        this.profile.time_zone_name = data.timezone;\n        this.profile.postal = data.postal;\n        this.profileStorageService.saveProfile(this.profile);\n        this.saveProfile(this.profile);\n      });\n    }\n\n    saveProfile(profile) {\n      this.service.addProfile(profile).subscribe(result => {});\n    }\n\n    saveProfileAction(name, val) {\n      var _a;\n\n      this.profile = this.profileStorageService.getProfile();\n      this.profileAction = new ProfileAction();\n      this.profileAction.profile = (_a = this.profile) === null || _a === void 0 ? void 0 : _a.ip;\n      this.profileAction.name = name;\n      this.profileAction.value = val;\n      this.service.addProfileAction(this.profileAction).subscribe(result => {});\n    } // profile actions scan functions\n\n\n    sum(list) {\n      return list.reduce((a, b) => a + b, 0);\n    } // onkeydown=\"keyScan(event)\"\n\n\n    keyScan(event) {\n      if (this.keys < 20) {\n        if (this.delta === 0) {\n          this.debut = Date.now();\n          this.delta++;\n          this.deltas.push(0);\n        } else {\n          let now = Date.now();\n          this.deltas.push((now - this.debut) / 1000);\n          this.debut = now;\n        }\n      } else if (this.keys === 20) {\n        const avg = Number((this.sum(this.deltas) / this.deltas.length).toFixed(4));\n        this.saveProfileAction('AvgKeyPress', avg);\n      }\n\n      this.keys++;\n    }\n\n    mouseMoveScan(event) {\n      if (this.moves < 100) {\n        if (this.delta_mouse === 0) {\n          this.debut_mouse = Date.now();\n          this.delta_mouse++;\n          this.deltas_mouse.push(0);\n        } else {\n          let now = Date.now();\n          this.deltas_mouse.push((now - this.debut_mouse) / 1000);\n          this.debut_mouse = now;\n        }\n      } else if (this.moves === 100) {\n        const avg = Number((this.sum(this.deltas_mouse) / this.deltas_mouse.length).toFixed(4));\n        this.saveProfileAction('AvgMouseMoveSpeed', avg);\n      }\n\n      this.moves++;\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.WebsiteService), i0.ɵɵdirectiveInject(i2.ProfileStorageService));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    hostBindings: function AppComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keypress\", function AppComponent_keypress_HostBindingHandler($event) {\n          return ctx.keyScan($event);\n        }, false, i0.ɵɵresolveDocument)(\"mousemove\", function AppComponent_mousemove_HostBindingHandler($event) {\n          return ctx.mouseMoveScan($event);\n        }, false, i0.ɵɵresolveDocument);\n      }\n    },\n    decls: 1,\n    vars: 0,\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"router-outlet\");\n      }\n    },\n    directives: [i3.RouterOutlet],\n    styles: [\".container-fluid[_ngcontent-%COMP%]{padding-top:200px;height:100%}\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}